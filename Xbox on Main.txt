XInputWrapper xinput;
	GamePad::XBoxController Xbox(&xinput,0);
	Xbox.SetDeadzone(10000);

	if (Xbox.IsConnected() == 1) {
		if (Xbox.LeftThumbLocation().GetX() < 0) {
			Camera::get()->strafeLeft();
		}
		else if (Xbox.LeftThumbLocation().GetY() < 0) {
			Camera::get()->moveBackward();
		}
		else if (Xbox.LeftThumbLocation().GetX() > 0) {
			Camera::get()->strafeRight();
		}
		else if (Xbox.LeftThumbLocation().GetY() > 0) {
			Camera::get()->moveForward();
		}
		else if (Xbox.PressedLeftShoulder()) {
			Camera::get()->strafeDown();
		}
		else if (Xbox.PressedRightShoulder()) {
			Camera::get()->strafeUp();
		}
	}
	else {
		if (KeyManager::get()->isAsciiKeyPressed('a')) {
			Camera::get()->strafeLeft();
		}

		if (KeyManager::get()->isAsciiKeyPressed('c')) {
			Camera::get()->strafeDown();
		}

		if (KeyManager::get()->isAsciiKeyPressed('d')) {
			Camera::get()->strafeRight();
		}

		if (KeyManager::get()->isAsciiKeyPressed('s')) {
			Camera::get()->moveBackward();
		}

		if (KeyManager::get()->isAsciiKeyPressed('w')) {
			Camera::get()->moveForward();
		}

		if (KeyManager::get()->isAsciiKeyPressed(' ')) {
			Camera::get()->strafeUp();
		}
	}
	speed = 0;
	steering = 0;

	if (Xbox.IsConnected() == 1) {
		if (Xbox.PressedLeftDpad()) {
			steering = Vehicle::MAX_LEFT_STEERING_DEGS * -1;
		}
		else if (Xbox.PressedRightDpad()) {
			steering = Vehicle::MAX_RIGHT_STEERING_DEGS * -1;
		}
		else if (Xbox.PressedUpDpad()) {
			speed = Vehicle::MAX_FORWARD_SPEED_MPS;
		}
		else if (Xbox.PressedDownDpad()) {
			speed = Vehicle::MAX_BACKWARD_SPEED_MPS;
		}
	}
	else{
		if (KeyManager::get()->isSpecialKeyPressed(GLUT_KEY_LEFT)) {
			steering = Vehicle::MAX_LEFT_STEERING_DEGS * -1;
		}

		if (KeyManager::get()->isSpecialKeyPressed(GLUT_KEY_RIGHT)) {
			steering = Vehicle::MAX_RIGHT_STEERING_DEGS * -1;
		}

		if (KeyManager::get()->isSpecialKeyPressed(GLUT_KEY_UP)) {
			speed = Vehicle::MAX_FORWARD_SPEED_MPS;
		}

		if (KeyManager::get()->isSpecialKeyPressed(GLUT_KEY_DOWN)) {
			speed = Vehicle::MAX_BACKWARD_SPEED_MPS;
		}
	}